package cn.edu.buaa.act.sdp.malwaredetector.services;

import android.app.Service;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.IBinder;
import android.util.Log;
import android.widget.Toast;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;

import cn.edu.buaa.act.sdp.malwaredetector.Constant;
import cn.edu.buaa.act.sdp.malwaredetector.util.AppLog;

public class StraceService extends Service {
    private int pid = 22204;

    public StraceService() {
    }

    public StraceService(int pid) {
        this.pid = pid;
    }

    @Override
    public void onCreate() {
        super.onCreate();
        new AsyncTask<Void, Void, Void>() {
            @Override
            protected Void doInBackground(Void... params) {
                try {
                    Process process = Runtime.getRuntime().exec("su");
                    DataOutputStream os = new DataOutputStream(process.getOutputStream());
                    os.writeBytes(String.format("strace -c -o /mnt/sdcard/MalwareDetector/%dlog.txt -p %d\n", pid, pid));
                    os.flush();
//                    BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
//                    String line;
//                    while ((line = reader.readLine()) != null) {
//                        Log.d("yao", line);
//                    }
//                    reader.close();
                    BufferedReader readerError = new BufferedReader(new InputStreamReader(process.getErrorStream()));
                    String error;
                    while ((error = readerError.readLine()) != null) {
//                        Log.d("yao", "error: " + error);
                        AppLog.log(Constant.TAG, error, 'd', pid + ".txt");
                    }
                    readerError.close();
//                    int exitValue = process.waitFor();
//                    Log.d("yao", "exitValued: " + exitValue);
                } catch (IOException e) {
                    e.printStackTrace();
                }
                return null;
            }
        }.execute();
    }

    @Override
    public IBinder onBind(Intent intent) {
        // TODO: Return the communication channel to the service.
        throw new UnsupportedOperationException("Not yet implemented");
    }
}
