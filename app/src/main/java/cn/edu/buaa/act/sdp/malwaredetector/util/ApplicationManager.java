package cn.edu.buaa.act.sdp.malwaredetector.util;

import android.content.Context;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.os.Environment;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

/**
 * Created by yao on 2014/11/5.
 * applicatin manager
 */
public class ApplicationManager {
    private static List<PackageInfo> list = new ArrayList<PackageInfo>();
    /**
     * get all installed applications
     * @param context
     * @return installed applications list
     */
    public static List<PackageInfo> getAllInstalledApps(Context context) {
        List<PackageInfo> apps = context.getPackageManager().getInstalledPackages(0);
        list.clear();
        for(PackageInfo pkg : apps) {
            if((pkg.applicationInfo.flags & pkg.applicationInfo.FLAG_SYSTEM) <= 0) {
                list.add(pkg);
            }
        }
        return list;
    }

    /**
     * 指定APK的路径，获取PackageInfo
     * @param context
     * @param apkPath: APK的路径
     * @return
     */
    public static PackageInfo getPackageInfo(Context context, String apkPath) {
        PackageInfo pkg = context.getPackageManager().getPackageArchiveInfo(apkPath, PackageManager.GET_ACTIVITIES);
        return pkg;
    }

    /**
     * 搜索整个文件系统查找APK安装包
     * @param context
     * @return APK安装包的PackageInfo列表
     */
    public static List<PackageInfo> getAllApk(Context context) {
        list.clear();
        File file = Environment.getExternalStorageDirectory();
        getAllApkDFS(context, file);
        return list;
    }

    public static void getAllApkDFS(Context context, File file) {
        if(file.isFile()) {
            String name = file.getName();
            String apkPath = null;
            if(name.toLowerCase().endsWith(".apk")) {
                apkPath = file.getAbsolutePath();
                list.add(getPackageInfo(context, apkPath));
            }
        }
        else {
            File[] files = file.listFiles();
            if(files != null && files.length > 0) {
                for(File fileInFolder : files) {
                    getAllApkDFS(context, fileInFolder);
                }
            }
        }
    }
}
